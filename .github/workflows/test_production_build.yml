name: Test production build

on: push

env:
  APP_NAME: rails_templates
  DOCKER_IMAGE: ${{ github.repository }}
  DOCKER_REGISTRY_HOST: ${{ secrets.DOCKER_REGISTRY_HOST }}
  RUBY_VERSION: 2.7.1
  NODE_VERSION: 12

jobs:
  build_production:
    name: Build docker production image for ${{ matrix.variant }} variant
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant: [web, api]
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2

      - uses: nimblehq/branch-tag-action@v1.2

      - uses: ruby/setup-ruby@v1.45.0
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Gems cache
        uses: actions/cache@v2
        with:
          path: /home/runner/.rubies/ruby-${{ env.RUBY_VERSION }}
          key: ${{ runner.os }}-gems-${{ env.RUBY_VERSION }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-${{ env.RUBY_VERSION }}-

      - name: Create app folder
        if: ${{ matrix.variant == 'web' }}
        run: mkdir $APP_NAME

      - name: Get yarn cache directory path
        if: ${{ matrix.variant == 'web' }}
        id: yarn-cache-dir-path
        run: echo "::set-output name=yarn_cache_dir::$(yarn cache dir)"

      - name: npm packages cache
        if: ${{ matrix.variant == 'web' }}
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.yarn_cache_dir }}
            **/yarn.lock
            **/node_modules
          key: ${{ runner.os }}-npm-packages-${{ hashFiles('**/package.json*') }}
          restore-keys: |
            ${{ runner.os }}-npm-packages-

      - name: Create rails app
        run: |
          gem install rails --no-document
          make create_${{ matrix.variant }}

      - name: Docker build production image
        run: |
          export BRANCH_TAG=${{ env.BRANCH_TAG }}-${{ matrix.variant }}
          make build_production
